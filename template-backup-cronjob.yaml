---
kind: Template
apiVersion: v1
metadata:
  name: cronjob-project-backup
  annotations:
    description: Scheduled Task to Backup all OpenShift Cluster ressources
objects:
  - kind: CronJob
    apiVersion: "${CRONJOB_API}"
    metadata:
      name: "${JOB_NAME}"
      namespace: "${NAMESPACE}"
    spec:
      schedule: "${SCHEDULE}"
      concurrencyPolicy: Forbid
      jobTemplate:
        spec:
          template:
            spec:
              containers:
                - name: "${JOB_NAME}"
                  image: "${IMAGE}:${IMAGE_TAG}"
                  command:
                    - "/bin/bash"
                    - "-c"
                    - "/script/backup.sh"
                  env:
                  volumeMounts:
                    - name: backupdir
                      mountPath: /backup
                    - name: backupscript
                      mountPath: /script
              restartPolicy: Never
              terminationGracePeriodSeconds: 30
              activeDeadlineSeconds: "${{DEADLINE}}"
              dnsPolicy: ClusterFirst
              serviceAccountName: "${JOB_SERVICE_ACCOUNT}"
              serviceAccount: "${JOB_SERVICE_ACCOUNT}"
              volumes:
                - name: backupscript
                  configMap:
                    defaultMode: 0755
                    name: openshift-backup-script
                - name: backupdir
                  persistentVolumeClaim:
                    claimName: project-backup
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: project-backup
      namespace: "${NAMESPACE}"
    spec:
      storageClassName: glusterfs-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "${STORAGE_SIZE}"
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: openshift-backup-script
      namespace: "${NAMESPACE}"
      labels:
        template: "cronjob-project-backup"
    data:
      backup.sh: |
        #!/bin/bash
        BACKUP_DIR="backup"
        BACKUP_DIR_WITH_DATE=${BACKUP_DIR}/$(date +%Y%m%d%H%M)
        DROP_OBJECTS="pod\|events\|rolebindingrestrictions\|reviews\|bindings\|deploymentconfigrollbacks\|imagesignatures\|imagestreamimages\|imagestreamimports\|imagestreammappings\|imagestreammappings\|useridentitymappings"
        OBJECTS="$(oc api-resources --namespaced=true -o name | grep -v $DROP_OBJECTS)"

        ### Cleanup
        find /backup/ -mtime +0 -delete

        ### Setup
        mkdir -p $BACKUP_DIR_WITH_DATE

        # Backup all resources of every project
        for project in $(oc get projects --no-headers | awk '{print $1}')
        do
            echo -n "[$(date +'%T')]"
            echo "Backing up project $project... "
            mkdir -p ${BACKUP_DIR_WITH_DATE}/${project}
            for object in $OBJECTS
            do
              oc export $object -o yaml -n ${project} > ${BACKUP_DIR_WITH_DATE}/${project}/${object}.yaml 2>/dev/null
            done
        done

        ### Zip it
        echo "Zipping"
        tar czf ${BACKUP_DIR}/backup-$(date +%Y%m%d%H%M).tar.gz ${BACKUP_DIR_WITH_DATE}/* --warning=no-file-changed

        ### Cleanup
        echo "Cleanup"
        rm -rf ${BACKUP_DIR_WITH_DATE}
  - kind: ClusterRoleBinding
    apiVersion: v1
    metadata:
      name: system:project-backup
      namespace: "${NAMESPACE}"
      labels:
        template: "cronjob-project-backup"
    roleRef:
      name: cluster-reader
    subjects:
      - kind: ServiceAccount
        name: "${JOB_SERVICE_ACCOUNT}"
    userNames:
      - system:serviceaccount:${NAMESPACE}:${JOB_SERVICE_ACCOUNT}
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      namespace: "${NAMESPACE}"
      name: "${JOB_SERVICE_ACCOUNT}"
      labels:
        template: "cronjob-project-backup"
parameters:
  - name: "JOB_NAME"
    description: "Name of the Scheduled Job to Create."
    value: "cronjob-project-backup"
    required: true
  - name: "SCHEDULE"
    description: "Cron Schedule to Execute the Job"
    value: 0 0 * * *
    required: true
  - name: "JOB_SERVICE_ACCOUNT"
    description: "Name of the Service Account To Exeucte the Job As."
    value: "project-backup"
    required: true
  - name: "NAMESPACE"
    description: "Namespace where this is deployed"
    value: "project-backup"
    required: true
  - name: "IMAGE"
    description: "Image to use for the container."
    required: true
    value: "registry.access.redhat.com/openshift3/jenkins-slave-base-rhel7"
  - name: "IMAGE_TAG"
    description: "Image Tag to use for the container."
    required: true
    value: "v3.11"
  - name: "STORAGE_SIZE"
    description: "Size of the PV claim"
    required: true
    value: "1G"
  - name: "DEADLINE"
    description: "How long can the cronjob run"
    required: true
    value: "3600"
  - name: "CRONJOB_API"
    description: "API to use for cronjob"
    required: true
    value: "batch/v1beta1"
labels:
template: cronjob-project-backup
